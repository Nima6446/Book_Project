# Generated by Django 5.2.6 on 2025-10-06 08:21

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(db_index=True, max_length=100, verbose_name='نام هتل/ویلا')),
                ('type', models.CharField(choices=[('room', 'اتاق'), ('villa', 'ویلا')], db_index=True, max_length=20, verbose_name='نوع اقامتگاه')),
                ('country', models.CharField(choices=[('افغانستان', 'افغانستان'), ('آلبانی', 'آلبانی'), ('الجزایر', 'الجزایر'), ('آندورا', 'آندورا'), ('آنگولا', 'آنگولا'), ('آنتیگوا و باربودا', 'آنتیگوا و باربودا'), ('آرژانتین', 'آرژانتین'), ('ارمنستان', 'ارمنستان'), ('استرالیا', 'استرالیا'), ('اتریش', 'اتریش'), ('آذربایجان', 'آذربایجان'), ('باهاما', 'باهاما'), ('بحرین', 'بحرین'), ('بنگلادش', 'بنگلادش'), ('باربادوس', 'باربادوس'), ('بلاروس', 'بلاروس'), ('بلژیک', 'بلژیک'), ('بلیز', 'بلیز'), ('بنین', 'بنین'), ('بوتان', 'بوتان'), ('بولیوی', 'بولیوی'), ('بوسنی و هرزگوین', 'بوسنی و هرزگوین'), ('بوتسوانا', 'بوتسوانا'), ('برزیل', 'برزیل'), ('برونئی', 'برونئی'), ('بلغارستان', 'بلغارستان'), ('بورکینافاسو', 'بورکینافاسو'), ('بوروندی', 'بوروندی'), ('کاپ ورد', 'کاپ ورد'), ('کامبوج', 'کامبوج'), ('کامرون', 'کامرون'), ('کانادا', 'کانادا'), ('جمهوری آفریقای مرکزی', 'جمهوری آفریقای مرکزی'), ('چاد', 'چاد'), ('شیلی', 'شیلی'), ('چین', 'چین'), ('کلمبیا', 'کلمبیا'), ('کومور', 'کومور'), ('کنگو (جمهوری)', 'کنگو (جمهوری)'), ('کنگو (جمهوری دموکراتیک)', 'کنگو (جمهوری دموکراتیک)'), ('کاستاریکا', 'کاستاریکا'), ('کرواسی', 'کرواسی'), ('کوبا', 'کوبا'), ('قبرس', 'قبرس'), ('چک', 'چک'), ('دانمارک', 'دانمارک'), ('جیبوتی', 'جیبوتی'), ('دومینیکا', 'دومینیکا'), ('جمهوری دومینیکن', 'جمهوری دومینیکن'), ('اکوادور', 'اکوادور'), ('مصر', 'مصر'), ('السالوادور', 'السالوادور'), ('استونی', 'استونی'), ('اسواتینی', 'اسواتینی'), ('اتیوپی', 'اتیوپی'), ('فیجی', 'فیجی'), ('فنلاند', 'فنلاند'), ('فرانسه', 'فرانسه'), ('گابن', 'گابن'), ('گامبیا', 'گامبیا'), ('گرجستان', 'گرجستان'), ('آلمان', 'آلمان'), ('غنا', 'غنا'), ('یونان', 'یونان'), ('گرانادا', 'گرانادا'), ('گواتمالا', 'گواتمالا'), ('گینه', 'گینه'), ('گینه بیسائو', 'گینه بیسائو'), ('گویان', 'گویان'), ('هائیتی', 'هائیتی'), ('هندوراس', 'هندوراس'), ('مجارستان', 'مجارستان'), ('ایسلند', 'ایسلند'), ('هند', 'هند'), ('اندونزی', 'اندونزی'), ('ایران', 'ایران'), ('عراق', 'عراق'), ('ایرلند', 'ایرلند'), ('اسرائیل', 'اسرائیل'), ('ایتالیا', 'ایتالیا'), ('جامائیکا', 'جامائیکا'), ('ژاپن', 'ژاپن'), ('اردن', 'اردن'), ('قزاقستان', 'قزاقستان'), ('کنیا', 'کنیا'), ('کیریباتی', 'کیریباتی'), ('کویت', 'کویت'), ('قرقیزستان', 'قرقیزستان'), ('لائوس', 'لائوس'), ('لتونی', 'لتونی'), ('لبنان', 'لبنان'), ('لسوتو', 'لسوتو'), ('لیبریا', 'لیبریا'), ('لیبی', 'لیبی'), ('لیختن\u200cاشتاین', 'لیختن\u200cاشتاین'), ('لیتوانی', 'لیتوانی'), ('لوکزامبورگ', 'لوکزامبورگ'), ('ماداگاسکار', 'ماداگاسکار'), ('مالاوی', 'مالاوی'), ('مالزی', 'مالزی'), ('مالدیو', 'مالدیو'), ('مالی', 'مالی'), ('مالت', 'مالت'), ('جزایر مارشال', 'جزایر مارشال'), ('موریتانی', 'موریتانی'), ('موریس', 'موریس'), ('مکزیک', 'مکزیک'), ('میکرونزی', 'میکرونزی'), ('مولداوی', 'مولداوی'), ('موناکو', 'موناکو'), ('مغولستان', 'مغولستان'), ('مونته\u200cنگرو', 'مونته\u200cنگرو'), ('مراکش', 'مراکش'), ('موزامبیک', 'موزامبیک'), ('میانمار', 'میانمار'), ('نامیبیا', 'نامیبیا'), ('نائورو', 'نائورو'), ('نپال', 'نپال'), ('هلند', 'هلند'), ('نیوزیلند', 'نیوزیلند'), ('نیکاراگوئه', 'نیکاراگوئه'), ('نیجر', 'نیجر'), ('نیجریه', 'نیجریه'), ('کره شمالی', 'کره شمالی'), ('مقدونیه شمالی', 'مقدونیه شمالی'), ('نروژ', 'نروژ'), ('عمان', 'عمان'), ('پاکستان', 'پاکستان'), ('پالائو', 'پالائو'), ('فلسطین', 'فلسطین'), ('پاناما', 'پاناما'), ('پاپوآ گینه نو', 'پاپوآ گینه نو'), ('پاراگوئه', 'پاراگوئه'), ('پرو', 'پرو'), ('فیلیپین', 'فیلیپین'), ('لهستان', 'لهستان'), ('پرتغال', 'پرتغال'), ('قطر', 'قطر'), ('رومانی', 'رومانی'), ('روسیه', 'روسیه'), ('رواندا', 'رواندا'), ('سنت کیتس و نویس', 'سنت کیتس و نویس'), ('سنت لوسیا', 'سنت لوسیا'), ('سنت وینسنت و گرنادین\u200cها', 'سنت وینسنت و گرنادین\u200cها'), ('ساموآ', 'ساموآ'), ('سان مارینو', 'سان مارینو'), ('سائوتومه و پرنسیپ', 'سائوتومه و پرنسیپ'), ('عربستان سعودی', 'عربستان سعودی'), ('سنگال', 'سنگال'), ('صربستان', 'صربستان'), ('سیشل', 'سیشل'), ('سیرالئون', 'سیرالئون'), ('سنگاپور', 'سنگاپور'), ('اسلواکی', 'اسلواکی'), ('اسلوونی', 'اسلوونی'), ('جزایر سلیمان', 'جزایر سلیمان'), ('سومالی', 'سومالی'), ('آفریقای جنوبی', 'آفریقای جنوبی'), ('کره جنوبی', 'کره جنوبی'), ('اسپانیا', 'اسپانیا'), ('سریلانکا', 'سریلانکا'), ('سودان', 'سودان'), ('سودان جنوبی', 'سودان جنوبی'), ('سورینام', 'سورینام'), ('سوئد', 'سوئد'), ('سوئیس', 'سوئیس'), ('سوریه', 'سوریه'), ('تاجیکستان', 'تاجیکستان'), ('تانزانیا', 'تانزانیا'), ('تایلند', 'تایلند'), ('تیمور شرقی', 'تیمور شرقی'), ('توگو', 'توگو'), ('تونگا', 'تونگا'), ('ترینیداد و توباگو', 'ترینیداد و توباگو'), ('تونس', 'تونس'), ('ترکیه', 'ترکیه'), ('ترکمنستان', 'ترکمنستان'), ('تووالو', 'تووالو'), ('اوگاندا', 'اوگاندا'), ('اوکراین', 'اوکراین'), ('امارات متحده عربی', 'امارات متحده عربی'), ('بریتانیا', 'بریتانیا'), ('ایالات متحده آمریکا', 'ایالات متحده آمریکا'), ('اروگوئه', 'اروگوئه'), ('ازبکستان', 'ازبکستان'), ('وانواتو', 'وانواتو'), ('واتیکان', 'واتیکان'), ('ونزوئلا', 'ونزوئلا'), ('ویتنام', 'ویتنام'), ('یمن', 'یمن'), ('زامبیا', 'زامبیا'), ('زیمبابوه', 'زیمبابوه')], db_index=True, max_length=100, verbose_name='کشور')),
                ('province', models.CharField(max_length=100, verbose_name='استان')),
                ('city', models.CharField(db_index=True, max_length=100, verbose_name='شهر')),
                ('address', models.CharField(blank=True, max_length=200, verbose_name='آدرس')),
                ('tell', models.CharField(blank=True, max_length=20, verbose_name='تلفن')),
                ('email', models.EmailField(blank=True, max_length=100, verbose_name='ایمیل')),
                ('default_checkin_time', models.TimeField(blank=True, null=True, verbose_name='زمان تحویل به میهمان')),
                ('default_checkout_time', models.TimeField(blank=True, null=True, verbose_name='زمان تحویل به میزبان')),
            ],
            options={
                'indexes': [models.Index(fields=['type', 'city', 'hotel_name'], name='room_proper_type_5e5461_idx')],
                'constraints': [models.UniqueConstraint(fields=('hotel_name', 'city'), name='unique_name_city')],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=100, verbose_name='عنوان')),
                ('slug', models.SlugField(max_length=150, unique=True, verbose_name='نام در URL')),
                ('capacity', models.IntegerField(db_index=True, verbose_name='ظرفیت')),
                ('number_of_room', models.IntegerField(db_index=True, verbose_name='تعداد اتاق')),
                ('size', models.IntegerField(verbose_name='متراژ')),
                ('rating', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='امتیاز')),
                ('price', models.DecimalField(db_index=True, decimal_places=2, max_digits=12, verbose_name='قیمت اجاره')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات')),
                ('is_active', models.BooleanField(db_index=True, verbose_name='فعال/غیر فعال')),
                ('amenity', models.TextField(blank=True, null=True, verbose_name='سرویس ها/امکانات')),
                ('hotel_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='room.property', verbose_name='نام هتل')),
            ],
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, verbose_name='تاریخ')),
                ('units_total', models.PositiveSmallIntegerField(db_index=True, verbose_name='تعداد اتاق های خالی')),
                ('units_reserves', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='تعداد اتاق های رزرو شده')),
                ('is_close', models.BooleanField(db_index=True, default=False, verbose_name='فروش بسته/باز')),
                ('price_override', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='قیمت جایگزین')),
                ('min_nights', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='حداقل شب قابل رزرو')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ آخرین بروزرسانی')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='room.room')),
            ],
        ),
        migrations.AddConstraint(
            model_name='room',
            constraint=models.UniqueConstraint(fields=('slug',), name='unique_property_slug'),
        ),
        migrations.AddConstraint(
            model_name='room',
            constraint=models.UniqueConstraint(fields=('hotel_name', 'title'), name='unique_room_in_hotel'),
        ),
        migrations.AddConstraint(
            model_name='room',
            constraint=models.CheckConstraint(condition=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='valid_room_rating'),
        ),
        migrations.AddIndex(
            model_name='availability',
            index=models.Index(fields=['room', 'date'], name='room_availa_room_id_1d1cbb_idx'),
        ),
        migrations.AddIndex(
            model_name='availability',
            index=models.Index(fields=['is_close'], name='room_availa_is_clos_689ed8_idx'),
        ),
        migrations.AddConstraint(
            model_name='availability',
            constraint=models.UniqueConstraint(fields=('room', 'date'), name='unique_room_date'),
        ),
        migrations.AddConstraint(
            model_name='availability',
            constraint=models.CheckConstraint(condition=models.Q(('units_reserves__lte', models.F('units_total'))), name='reserves_lte_total'),
        ),
    ]
